# -*- coding: utf-8 -*-
"""Iris_RF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P30hxAN_8rLC4uC-AY3pFu5geNxK_QAO
"""

import pandas as pd
import numpy as np
df=pd.read_csv("/content/Iris.csv")
df

df.isna().sum()

df1=df.drop(['Id'],axis=1)
df1

# convert object into neumerical value
from sklearn.preprocessing import LabelEncoder
coder=LabelEncoder()
df1['Species']=coder.fit_transform(df1['Species'])
df1

#input and output
x=df1.iloc[:,:-1].values
x

y=df1.iloc[:,-1].values
y

# convert it to training data and testing data/model selection
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=1)
x_train
x_test
y_train
y_test

from sklearn.ensemble import RandomForestClassifier
classifier=RandomForestClassifier(n_estimators=3)
classifier.fit(x_train,y_train)

y_pred=classifier.predict(x_test)
y_pred

# confusion matrix and confusion matrix display
from sklearn.metrics import classification_report,confusion_matrix,accuracy_score,ConfusionMatrixDisplay
labels=['Iris-versicolor','Iris-setosa','Iris-virginica']
result=confusion_matrix(y_test,y_pred)
print(result)

cmd=ConfusionMatrixDisplay(result,display_labels=labels)
cmd.plot()

score=accuracy_score(y_test,y_pred)
print(score)