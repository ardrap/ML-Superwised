# -*- coding: utf-8 -*-
"""Iris_DT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z-G_SaqVZBGbQWWvshuRzti49CRozs2e
"""

import numpy as np
import pandas as pd

df=pd.read_csv('/content/Iris.csv')
df

# check null values
df.isna().sum()

# drop Id
df1=df.drop(['Id'],axis=1)
df1

# input and output
x=df1.iloc[:,:-1].values
y=df1.iloc[:,-1].values
x

y

# model selection
# convert it to training data and testing data/model selection
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30)
x_train

x_test

y_train

y_test

# pre-processing
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler.fit(x_train)

x_train=scaler.transform(x_train)
x_train

x_test=scaler.transform(x_test)
x_test

from sklearn.tree import DecisionTreeClassifier
classifier=DecisionTreeClassifier(criterion='entropy')
classifier.fit(x_train,y_train)

y_pred=classifier.predict(x_test)
y_pred

from sklearn.metrics import classification_report,confusion_matrix,accuracy_score,ConfusionMatrixDisplay
labels=['Iris-versicolor','Iris-setosa','Iris-virginica']
result=confusion_matrix(y_test,y_pred)
result

cmd=ConfusionMatrixDisplay(result,display_labels=labels)
cmd.plot()

score=accuracy_score(y_test,y_pred)
score

from sklearn import tree
import matplotlib.pyplot as plt
plt.figure(figsize=(15,15))
tree.plot_tree(classifier,feature_names=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm'],class_names=['Iris-setosa','Iris-versicolor','Iris-virginica'],filled=True)
# filled=True: To get color